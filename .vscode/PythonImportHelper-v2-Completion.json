[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "UserChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "Enterprise",
        "importPath": "enterprise.models",
        "description": "enterprise.models",
        "isExtraImport": true,
        "detail": "enterprise.models",
        "documentation": {}
    },
    {
        "label": "UserEnterprise",
        "importPath": "enterprise.models",
        "description": "enterprise.models",
        "isExtraImport": true,
        "detail": "enterprise.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "authentication",
        "description": "authentication",
        "isExtraImport": true,
        "detail": "authentication",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "get_random_secret_key",
        "importPath": "django.core.management.utils",
        "description": "django.core.management.utils",
        "isExtraImport": true,
        "detail": "django.core.management.utils",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "authentication.migrations.0001_initial",
        "description": "authentication.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "authentication.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "authentication.admin",
        "description": "authentication.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    add_form = UserCreationForm\n    form = UserChangeForm\n    model = CustomUser\n    list_display = (\"username\", \"date_joined\", \"is_active\", \"is_staff\", \"is_superuser\")\n    list_filter = (\"is_staff\", \"is_superuser\", \"is_active\")\n    fieldsets = (\n        (None, {\"fields\": (\"username\", \"password\")}),\n        (\"Permissions\", {\"fields\": (\"is_active\", \"is_staff\", \"is_superuser\")}),\n    )",
        "detail": "authentication.admin",
        "documentation": {}
    },
    {
        "label": "EnterpriseAdmin",
        "kind": 6,
        "importPath": "authentication.admin",
        "description": "authentication.admin",
        "peekOfCode": "class EnterpriseAdmin(admin.ModelAdmin):\n    list_display = (\"name\", \"master_group\")\n    search_fields = (\"name\",)\n    ordering = (\"name\",)\n    def get_queryset(self, request):\n        qs = super().get_queryset(request)\n        if (\n            request.user.is_superuser\n            or request.user.groups.filter(name=\"Enterprise Masters\").exists()\n        ):",
        "detail": "authentication.admin",
        "documentation": {}
    },
    {
        "label": "AuthenticationConfig",
        "kind": 6,
        "importPath": "authentication.apps",
        "description": "authentication.apps",
        "peekOfCode": "class AuthenticationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'authentication'",
        "detail": "authentication.apps",
        "documentation": {}
    },
    {
        "label": "CustomUserManager",
        "kind": 6,
        "importPath": "authentication.models",
        "description": "authentication.models",
        "peekOfCode": "class CustomUserManager(BaseUserManager):\n    def create_user(self, username, password=None, **extra_fields):\n        if not username:\n            raise ValueError(\"El nombre de usuario es obligatorio\")\n        username = self.model.normalize_username(username)\n        user = self.model(username=username, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n    def create_superuser(self, username, password=None, **extra_fields):",
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "authentication.models",
        "description": "authentication.models",
        "peekOfCode": "class CustomUser(AbstractBaseUser, PermissionsMixin):\n    username = models.CharField(max_length=150, unique=True)\n    date_joined = models.DateTimeField(default=timezone.now)\n    is_active = models.BooleanField(default=True)\n    is_staff = models.BooleanField(default=False)\n    USERNAME_FIELD = \"username\"\n    REQUIRED_FIELDS = []\n    objects = CustomUserManager()\n    def __str__(self):\n        return self.username",
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "kind": 6,
        "importPath": "authentication.models",
        "description": "authentication.models",
        "peekOfCode": "class Profile(models.Model):\n    user = models.OneToOneField(CustomUser, on_delete=models.CASCADE)\n    phone_number = models.CharField(max_length=15, blank=True)\n    email = models.EmailField(blank=True)\n    profile_photo = models.ImageField(\n        upload_to=\"profile_photos/\", null=True, blank=True\n    )\n    def __str__(self):\n        return str(self.user)",
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"j0i=@mc3e%bnrfop$)hb8lkxot41#*v748ron881l75#ohh$+y\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = \"j0i=@mc3e%bnrfop$)hb8lkxot41#*v748ron881l75#ohh$+y\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"authentication\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"authentication\",\n    \"enterprise\",\n    \"inventory\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"authentication.CustomUser\"\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"core.urls\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = \"core.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = \"core.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Media Files",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Media Files\nMEDIA_URL = \"/media/\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Media Files\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Media Files\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\n# Default primary key field type",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = \"/static/\"\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Media Files\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Media Files\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\n# Media Files\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('inventory.urls')),\n    path('', include('enterprise.urls'))\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "enterprise.migrations.0001_initial",
        "description": "enterprise.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Department',\n            fields=[",
        "detail": "enterprise.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "enterprise.migrations.0002_employee_enterprise",
        "description": "enterprise.migrations.0002_employee_enterprise",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('enterprise', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='employee',\n            name='enterprise',\n            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='enterprise.enterprise'),\n            preserve_default=False,",
        "detail": "enterprise.migrations.0002_employee_enterprise",
        "documentation": {}
    },
    {
        "label": "IndustryAdmin",
        "kind": 6,
        "importPath": "enterprise.admin",
        "description": "enterprise.admin",
        "peekOfCode": "class IndustryAdmin(admin.ModelAdmin):\n    list_display = ('name',)\n    search_fields = ('name',)\n# @admin.register(Enterprise)\n# class EnterpriseAdmin(admin.ModelAdmin):\n#     list_display = ('name', 'address', 'city', 'country', 'website', 'industry', 'master_group')\n#     search_fields = ('name', 'city', 'country', 'industry__name')\n#     list_filter = ('industry', 'country')\n#     ordering = ('name',)\n#     autocomplete_fields = ('industry', 'master_group')",
        "detail": "enterprise.admin",
        "documentation": {}
    },
    {
        "label": "DepartmentAdmin",
        "kind": 6,
        "importPath": "enterprise.admin",
        "description": "enterprise.admin",
        "peekOfCode": "class DepartmentAdmin(admin.ModelAdmin):\n    list_display = ('name', 'description')\n    search_fields = ('name',)\n    ordering = ('name',)\n@admin.register(Employee)\nclass EmployeeAdmin(admin.ModelAdmin):\n    list_display = ('user', 'department', 'position')\n    search_fields = ('user__username', 'department__name', 'position')\n    list_filter = ('department',)\n    autocomplete_fields = ('user', 'department')",
        "detail": "enterprise.admin",
        "documentation": {}
    },
    {
        "label": "EmployeeAdmin",
        "kind": 6,
        "importPath": "enterprise.admin",
        "description": "enterprise.admin",
        "peekOfCode": "class EmployeeAdmin(admin.ModelAdmin):\n    list_display = ('user', 'department', 'position')\n    search_fields = ('user__username', 'department__name', 'position')\n    list_filter = ('department',)\n    autocomplete_fields = ('user', 'department')\n@admin.register(Project)\nclass ProjectAdmin(admin.ModelAdmin):\n    list_display = ('name', 'start_date', 'end_date')\n    search_fields = ('name', 'description')\n    list_filter = ('start_date', 'end_date')",
        "detail": "enterprise.admin",
        "documentation": {}
    },
    {
        "label": "ProjectAdmin",
        "kind": 6,
        "importPath": "enterprise.admin",
        "description": "enterprise.admin",
        "peekOfCode": "class ProjectAdmin(admin.ModelAdmin):\n    list_display = ('name', 'start_date', 'end_date')\n    search_fields = ('name', 'description')\n    list_filter = ('start_date', 'end_date')\n    ordering = ('name',)\n    filter_horizontal = ('employees',)\n    autocomplete_fields = ('employees',)\n@admin.register(Task)\nclass TaskAdmin(admin.ModelAdmin):\n    list_display = ('name', 'project', 'assigned_to', 'due_date', 'completed')",
        "detail": "enterprise.admin",
        "documentation": {}
    },
    {
        "label": "TaskAdmin",
        "kind": 6,
        "importPath": "enterprise.admin",
        "description": "enterprise.admin",
        "peekOfCode": "class TaskAdmin(admin.ModelAdmin):\n    list_display = ('name', 'project', 'assigned_to', 'due_date', 'completed')\n    search_fields = ('name', 'project__name', 'assigned_to__user__username')\n    list_filter = ('completed', 'due_date')\n    autocomplete_fields = ('project', 'assigned_to')\n    ordering = ('due_date',)",
        "detail": "enterprise.admin",
        "documentation": {}
    },
    {
        "label": "EnterpriseConfig",
        "kind": 6,
        "importPath": "enterprise.apps",
        "description": "enterprise.apps",
        "peekOfCode": "class EnterpriseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'enterprise'",
        "detail": "enterprise.apps",
        "documentation": {}
    },
    {
        "label": "Industry",
        "kind": 6,
        "importPath": "enterprise.models",
        "description": "enterprise.models",
        "peekOfCode": "class Industry(models.Model):\n    name = models.CharField(max_length=100, unique=True)\n    def __str__(self):\n        return self.name\nclass Enterprise(models.Model):\n    name = models.CharField(max_length=100)\n    address = models.CharField(max_length=255)\n    city = models.CharField(max_length=100)\n    country = models.CharField(max_length=100)\n    website = models.URLField(blank=True)",
        "detail": "enterprise.models",
        "documentation": {}
    },
    {
        "label": "Enterprise",
        "kind": 6,
        "importPath": "enterprise.models",
        "description": "enterprise.models",
        "peekOfCode": "class Enterprise(models.Model):\n    name = models.CharField(max_length=100)\n    address = models.CharField(max_length=255)\n    city = models.CharField(max_length=100)\n    country = models.CharField(max_length=100)\n    website = models.URLField(blank=True)\n    logo = models.ImageField(upload_to=\"enterprise_logos/\", null=True, blank=True)\n    industry = models.ForeignKey(Industry, on_delete=models.CASCADE)\n    master_group = models.ForeignKey(\n        Group, on_delete=models.CASCADE, related_name=\"managed_enterprises\"",
        "detail": "enterprise.models",
        "documentation": {}
    },
    {
        "label": "UserEnterprise",
        "kind": 6,
        "importPath": "enterprise.models",
        "description": "enterprise.models",
        "peekOfCode": "class UserEnterprise(models.Model):\n    user = models.OneToOneField(auth.CustomUser, on_delete=models.CASCADE)\n    enterprise = models.ForeignKey(Enterprise, on_delete=models.CASCADE)\n    def __str__(self):\n        return f\"{self.user.username} - {self.enterprise.name}\"\nclass Department(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    def __str__(self):\n        return self.name",
        "detail": "enterprise.models",
        "documentation": {}
    },
    {
        "label": "Department",
        "kind": 6,
        "importPath": "enterprise.models",
        "description": "enterprise.models",
        "peekOfCode": "class Department(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    def __str__(self):\n        return self.name\nclass Employee(models.Model):\n    user = models.OneToOneField(auth.CustomUser, on_delete=models.CASCADE)\n    department = models.ForeignKey(Department, on_delete=models.CASCADE)\n    position = models.CharField(max_length=100)\n    enterprise = models.ForeignKey(Enterprise, on_delete=models.CASCADE)",
        "detail": "enterprise.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "kind": 6,
        "importPath": "enterprise.models",
        "description": "enterprise.models",
        "peekOfCode": "class Employee(models.Model):\n    user = models.OneToOneField(auth.CustomUser, on_delete=models.CASCADE)\n    department = models.ForeignKey(Department, on_delete=models.CASCADE)\n    position = models.CharField(max_length=100)\n    enterprise = models.ForeignKey(Enterprise, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.user.username\n# Proyectos y Tareas\nclass Project(models.Model):\n    name = models.CharField(max_length=100)",
        "detail": "enterprise.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "kind": 6,
        "importPath": "enterprise.models",
        "description": "enterprise.models",
        "peekOfCode": "class Project(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    start_date = models.DateField()\n    end_date = models.DateField()\n    employees = models.ManyToManyField(Employee, related_name=\"projects\")\n    def __str__(self):\n        return self.name\nclass Task(models.Model):\n    name = models.CharField(max_length=100)",
        "detail": "enterprise.models",
        "documentation": {}
    },
    {
        "label": "Task",
        "kind": 6,
        "importPath": "enterprise.models",
        "description": "enterprise.models",
        "peekOfCode": "class Task(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    project = models.ForeignKey(Project, on_delete=models.CASCADE)\n    assigned_to = models.ForeignKey(Employee, on_delete=models.CASCADE)\n    due_date = models.DateField()\n    completed = models.BooleanField(default=False)\n    def __str__(self):\n        return self.name",
        "detail": "enterprise.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "enterprise.urls",
        "description": "enterprise.urls",
        "peekOfCode": "urlpatterns = [\n]",
        "detail": "enterprise.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0001_initial",
        "description": "inventory.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='FieldType',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=255)),",
        "detail": "inventory.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0002_remove_fieldvalue_field_type_and_more",
        "description": "inventory.migrations.0002_remove_fieldvalue_field_type_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='fieldvalue',\n            name='field_type',\n        ),\n        migrations.RemoveField(",
        "detail": "inventory.migrations.0002_remove_fieldvalue_field_type_and_more",
        "documentation": {}
    },
    {
        "label": "CellInline",
        "kind": 6,
        "importPath": "inventory.admin",
        "description": "inventory.admin",
        "peekOfCode": "class CellInline(admin.TabularInline):\n    model = Cell\n    extra = 0\nclass InventoryElementInline(admin.TabularInline):\n    model = InventoryElement\n    extra = 0\nclass InventoryAdmin(admin.ModelAdmin):\n    inlines = [\n        InventoryElementInline,\n    ]",
        "detail": "inventory.admin",
        "documentation": {}
    },
    {
        "label": "InventoryElementInline",
        "kind": 6,
        "importPath": "inventory.admin",
        "description": "inventory.admin",
        "peekOfCode": "class InventoryElementInline(admin.TabularInline):\n    model = InventoryElement\n    extra = 0\nclass InventoryAdmin(admin.ModelAdmin):\n    inlines = [\n        InventoryElementInline,\n    ]\nclass CellConfigurationAdmin(admin.ModelAdmin):\n    inlines = [\n        CellInline,",
        "detail": "inventory.admin",
        "documentation": {}
    },
    {
        "label": "InventoryAdmin",
        "kind": 6,
        "importPath": "inventory.admin",
        "description": "inventory.admin",
        "peekOfCode": "class InventoryAdmin(admin.ModelAdmin):\n    inlines = [\n        InventoryElementInline,\n    ]\nclass CellConfigurationAdmin(admin.ModelAdmin):\n    inlines = [\n        CellInline,\n    ]\nadmin.site.register(Inventory, InventoryAdmin)\nadmin.site.register(CellConfiguration, CellConfigurationAdmin)",
        "detail": "inventory.admin",
        "documentation": {}
    },
    {
        "label": "CellConfigurationAdmin",
        "kind": 6,
        "importPath": "inventory.admin",
        "description": "inventory.admin",
        "peekOfCode": "class CellConfigurationAdmin(admin.ModelAdmin):\n    inlines = [\n        CellInline,\n    ]\nadmin.site.register(Inventory, InventoryAdmin)\nadmin.site.register(CellConfiguration, CellConfigurationAdmin)\nadmin.site.register(InventoryElement)\nadmin.site.register(Cell)",
        "detail": "inventory.admin",
        "documentation": {}
    },
    {
        "label": "InventoryConfig",
        "kind": 6,
        "importPath": "inventory.apps",
        "description": "inventory.apps",
        "peekOfCode": "class InventoryConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'inventory'",
        "detail": "inventory.apps",
        "documentation": {}
    },
    {
        "label": "InventoryForm",
        "kind": 6,
        "importPath": "inventory.forms",
        "description": "inventory.forms",
        "peekOfCode": "class InventoryForm(forms.ModelForm):\n    class Meta:\n        model = Inventory\n        fields = ['name', 'description']\nclass CellConfigurationForm(forms.ModelForm):\n    class Meta:\n        model = CellConfiguration\n        fields = ['label', 'cell_type']",
        "detail": "inventory.forms",
        "documentation": {}
    },
    {
        "label": "CellConfigurationForm",
        "kind": 6,
        "importPath": "inventory.forms",
        "description": "inventory.forms",
        "peekOfCode": "class CellConfigurationForm(forms.ModelForm):\n    class Meta:\n        model = CellConfiguration\n        fields = ['label', 'cell_type']",
        "detail": "inventory.forms",
        "documentation": {}
    },
    {
        "label": "Inventory",
        "kind": 6,
        "importPath": "inventory.models",
        "description": "inventory.models",
        "peekOfCode": "class Inventory(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    def __str__(self):\n        return self.name\nclass CellConfiguration(models.Model):\n    TYPE_CHOICES = [\n        ('TEXT', 'Text'),\n        ('NUMBER', 'Number'),\n        ('TASK_COMPLETED', 'Task Completed'),",
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "CellConfiguration",
        "kind": 6,
        "importPath": "inventory.models",
        "description": "inventory.models",
        "peekOfCode": "class CellConfiguration(models.Model):\n    TYPE_CHOICES = [\n        ('TEXT', 'Text'),\n        ('NUMBER', 'Number'),\n        ('TASK_COMPLETED', 'Task Completed'),\n        ('DISPLAY_BOX', 'Display Box'),\n    ]\n    inventory = models.ForeignKey(Inventory, related_name='cell_configurations', on_delete=models.CASCADE)\n    label = models.CharField(max_length=100)\n    cell_type = models.CharField(max_length=20, choices=TYPE_CHOICES)",
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "InventoryElement",
        "kind": 6,
        "importPath": "inventory.models",
        "description": "inventory.models",
        "peekOfCode": "class InventoryElement(models.Model):\n    inventory = models.ForeignKey(Inventory, related_name='elements', on_delete=models.CASCADE)\n    label = models.CharField(max_length=100)\n    def __str__(self):\n        return self.label\nclass Cell(models.Model):\n    element = models.ForeignKey(InventoryElement, related_name='cells', on_delete=models.CASCADE)\n    configuration = models.ForeignKey(CellConfiguration, on_delete=models.CASCADE)\n    value_text = models.TextField(blank=True, null=True)\n    value_number = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)",
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Cell",
        "kind": 6,
        "importPath": "inventory.models",
        "description": "inventory.models",
        "peekOfCode": "class Cell(models.Model):\n    element = models.ForeignKey(InventoryElement, related_name='cells', on_delete=models.CASCADE)\n    configuration = models.ForeignKey(CellConfiguration, on_delete=models.CASCADE)\n    value_text = models.TextField(blank=True, null=True)\n    value_number = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)\n    value_boolean = models.BooleanField(default=False)\n    value_datetime = models.DateTimeField(blank=True, null=True)\n    def __str__(self):\n        return f\"{self.configuration.label} - {self.element.label}\"",
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "inventory.urls",
        "description": "inventory.urls",
        "peekOfCode": "urlpatterns = [\n    path('inventory/new/', InventoryCreateView.as_view(), name='inventory_create'),\n    path('inventory/<int:pk>/', InventoryDetailView.as_view(), name='inventory_detail'),\n    path('inventory/<int:inventory_id>/cell/new/', CellConfigurationCreateView.as_view(), name='cell_config_create'),\n    path('inventory/<int:inventory_id>/element/new/', InventoryElementCreateView.as_view(), name='element_create'),\n]",
        "detail": "inventory.urls",
        "documentation": {}
    },
    {
        "label": "InventoryCreateView",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class InventoryCreateView(View):\n    def get(self, request):\n        inventory_form = InventoryForm()\n        return render(request, 'inventory/inventory_create.html', {\n            'inventory_form': inventory_form,\n        })\n    def post(self, request):\n        inventory_form = InventoryForm(request.POST)\n        if inventory_form.is_valid():\n            inventory = inventory_form.save()",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "CellConfigurationCreateView",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class CellConfigurationCreateView(View):\n    def get(self, request, inventory_id):\n        inventory = get_object_or_404(Inventory, pk=inventory_id)\n        cell_config_form = CellConfigurationForm()\n        return render(request, 'inventory/cell_configuration_create.html', {\n            'inventory': inventory,\n            'cell_config_form': cell_config_form,\n        })\n    def post(self, request, inventory_id):\n        inventory = get_object_or_404(Inventory, pk=inventory_id)",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "InventoryDetailView",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class InventoryDetailView(View):\n    def get(self, request, pk):\n        inventory = get_object_or_404(Inventory, pk=pk)\n        cell_configurations = inventory.cell_configurations.all()\n        elements = inventory.elements.all()\n        return render(request, 'inventory/inventory_detail.html', {\n            'inventory': inventory,\n            'cell_configurations': cell_configurations,\n            'elements': elements,\n        })",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "InventoryElementCreateView",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class InventoryElementCreateView(View):\n    def get(self, request, inventory_id):\n        inventory = get_object_or_404(Inventory, pk=inventory_id)\n        return render(request, 'inventory/element_create.html', {\n            'inventory': inventory,\n        })\n    def post(self, request, inventory_id):\n        inventory = get_object_or_404(Inventory, pk=inventory_id)\n        label = request.POST.get('label')\n        if label:",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]